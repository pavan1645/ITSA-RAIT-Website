Translation
#include<stdio.h>
#include<graphics.h>
void main() {
  int ps[4][2], i, j, tx, ty;
  printf("Enter four points for rectangle: ");
  for (i = 0; i < 4; i++)
    for (j = 0; j < 2; j++)
      scanf("%d", &ps[i][j]);
  printf("Enter translation x and y: ");
  scanf("%d%d", &tx, &ty);
  int gd=DETECT,gm;
  initgraph(&gd,&gm,NULL);
  printf("Before translation");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
  for (i = 0; i < 4; i++) {
    ps[i][0] += tx;
    ps[i][1] += ty;
  }
  initgraph(&gd,&gm,NULL);
  printf("After translation");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
}


Scaling
#include<stdio.h>
#include<graphics.h>


void main() {
  float ps[4][2], sx, sy;
  int i, j;
  printf("Enter four points for rectangle: ");
  for (i = 0; i < 4; i++)
    for (j = 0; j < 2; j++)
      scanf("%f", &ps[i][j]);
  printf("Enter scaling x and y: ");
  scanf("%f%f", &sx, &sy);
  int gd=DETECT,gm;
  initgraph(&gd,&gm,NULL);
  printf("Before scaling");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
  for (i = 0; i < 4; i++) {
    ps[i][0] *= sx;
    ps[i][1] *= sy;
  }
  initgraph(&gd,&gm,NULL);
  printf("After scaling");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
}


Rotation
#include<stdio.h>
#include<graphics.h>
#include<math.h>
void main() {
  int x1,y1,x2,y2,x3,y3,a1,b1,a2,b2,a3,b3,Angle,p,q;
  float angle;
  printf("Enter x1 and y1: ");
  scanf("%d%d",&x1,&y1);
  printf("Enter x2 and y2: ");
  scanf("%d%d",&x2,&y2);
  printf("Enter x3 and y3: ");
  scanf("%d%d",&x3,&y3);
  printf("Enter angle to rotate: ");
  scanf("%d",&Angle);
  int gd=DETECT,gm;
  initgraph(&gd,&gm,NULL);
  setcolor(WHITE);
  line(x1,y1,x2,y2);
  line(x1,y1,x3,y3);
  line(x3,y3,x2,y2);
  setcolor(RED);
  p=x2;
  q=y2;
  angle=((float)Angle*3.14)/180;
  a1=p+(x1-p)*cos(angle)-(y1-q)*sin(angle);
  b1=q+(x1-p)*sin(angle)+(y1-q)*cos(angle);
  a2=p+(x2-p)*cos(angle)-(y2-q)*sin(angle);
  b2=q+(x2-p)*sin(angle)+(y2-q)*cos(angle);
  a3=p+(x3-p)*cos(angle)-(y3-q)*sin(angle);
  b3=q+(x3-p)*sin(angle)+(y3-q)*cos(angle);
  line(a1,b1,a2,b2);
  line(a1,b1,a3,b3);
  line(a3,b3,a2,b2);
  getch();
  closegraph();
}


Shearing along X-axis
#include<stdio.h>
#include<graphics.h>
void main() {
  float ps[4][2], shx;
  int i, j;
  printf("Enter four points for rectangle: ");
  for (i = 0; i < 4; i++)
    for (j = 0; j < 2; j++)
      scanf("%f", &ps[i][j]);
  printf("Enter shearing x: ");
  scanf("%f", &shx);
  int gd=DETECT,gm;
  initgraph(&gd,&gm,NULL);
  printf("Before shearing x");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
  for (i = 0; i < 4; i++) {
    ps[i][0] += (shx * ps[i][1]);
  }
  initgraph(&gd,&gm,NULL);
  printf("After shearing x");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
}


Shearing along Y-axis
#include<stdio.h>
#include<graphics.h>
void main() {
  float ps[4][2], shy;
  int i, j;
  printf("Enter four points for rectangle: ");
  for (i = 0; i < 4; i++)
    for (j = 0; j < 2; j++)
      scanf("%f", &ps[i][j]);
  printf("Enter shearing y: ");
  scanf("%f", &shy);
  int gd=DETECT,gm;
  initgraph(&gd,&gm,NULL);
  printf("Before shearing y");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
  for (i = 0; i < 4; i++) {
    ps[i][1] += (shy * ps[i][0]);
  }
  initgraph(&gd,&gm,NULL);
  printf("After shearing y");
  line(ps[0][0],ps[0][1],ps[1][0],ps[1][1]);
  line(ps[1][0],ps[1][1],ps[2][0],ps[2][1]);
  line(ps[2][0],ps[2][1],ps[3][0],ps[3][1]);
  line(ps[3][0],ps[3][1],ps[0][0],ps[0][1]);
  getch();
  closegraph();
}

 
